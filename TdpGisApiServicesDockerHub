#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src
COPY ["TdpGISApp/TdpGisApi.Services/TdpGisApi.Services.csproj", "TdpGisApi.Services/"]
COPY ["TdpGISApp/TdpGisApi.Configuration/TdpGisApi.Configuration.csproj", "TdpGisApi.Configuration/"]
COPY ["TdpGISApp/TdpGisApi.Application/TdpGisApi.Application.csproj", "TdpGisApi.Application/"]
COPY ["TdpGISApp/TdpGisApi.Infrastructure.Mongodb/TdpGisApi.Infrastructure.Mongodb.csproj", "TdpGisApi.Infrastructure.Mongodb/"]
COPY ["TdpGISApp/TdpGisApi.Configuration.Mongodb/TdpGisApi.Configuration.Mongodb.csproj", "TdpGisApi.Configuration.Mongodb/"]
RUN dotnet restore "TdpGisApi.Services/TdpGisApi.Services.csproj"
COPY . .
WORKDIR "/src/TdpGisApi.Services"
RUN dotnet build "TdpGisApi.Services.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TdpGisApi.Services.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TdpGisApi.Services.dll"]